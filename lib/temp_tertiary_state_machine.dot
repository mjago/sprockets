digraph draw_state_machine {
  graph [bgcolor = white, label = "\n\nMain State Machine", rankdir = "UD"];
  edge [color = green, fontcolor = darkgreen, fontname = "verdana", fontsize = "16", url = "http://google.com"];
  node [color = black, fillcolor = lightblue, fontcolor = navyblue, fontname = "verdana", fontsize = "16", shape = circle, style = filled, url = "http://google.com"];
  init_state [label = "init\nstate"];
  init_state -> contact_tester_state [label = "initialised!"];
  contact_tester_state [label = "contact\ntester\nstate"];
  contact_tester_state -> contact_tester_state [label = "tester\nnot\ncontacted!"];
  contact_tester_state [label = "contact\ntester\nstate"];
  contact_tester_state -> listen_for_tester_state [label = "tester\ncontacted!"];
  contact_tester_state [label = "contact\ntester\nstate"];
  contact_tester_state -> init_state [label = "contact\ntester\ntimeout!"];
  listen_for_tester_state [label = "listen\nfor\ntester\nstate"];
  listen_for_tester_state -> listen_for_tester_state [label = "tester\nunheard!"];
  listen_for_tester_state [label = "listen\nfor\ntester\nstate"];
  listen_for_tester_state -> send_tester_tick_state [label = "tester\nheard!"];
  listen_for_tester_state [label = "listen\nfor\ntester\nstate"];
  listen_for_tester_state -> contact_tester_state [label = "tester\nlistening\ntimeout!"];
  send_tester_tick_state [label = "send\ntester\ntick\nstate"];
  send_tester_tick_state -> sent_tester_tick_state [label = "sent\ntick\nto\ntester!"];
  sent_tester_tick_state [label = "sent\ntester\ntick\nstate"];
  sent_tester_tick_state -> pending [label = "received\ntick\nack!"];
  sent_tester_tick_state [label = "sent\ntester\ntick\nstate"];
  sent_tester_tick_state -> increment_tester_nak_state [label = "received\ntick\nnak!"];
  sent_tester_tick_state [label = "sent\ntester\ntick\nstate"];
  sent_tester_tick_state -> listen_for_tester_state [label = "await\ntick\ntimeout!"];
  increment_tester_nak_state [label = "increment\ntester\nnak\nstate"];
  increment_tester_nak_state -> init_state [label = "nak\novercount!"];
  increment_tester_nak_state [label = "increment\ntester\nnak\nstate"];
  increment_tester_nak_state -> send_tester_tick_state [label = "not\nnak\novercount!"];
  pending [label = "pending"];
  pending -> pending [label = "PENDING!"];
}
